{"version":3,"sources":["utils/staticData.js","components/Msgs/CreateEmail.js","components/Msgs/ManageEmails.js","components/Msgs/Messages.js","components/LoginPage.js","components/NavIBar.js","App.js","reportWebVitals.js","store/reducer.js","index.js"],"names":["baseUrl","CreateEmail","userId","useSelector","state","token","useState","reciverId","setReciverId","subject","setSubject","messageBody","setMessageBody","formValidated","setFormValidated","sendingMsg","setSendingMsg","showWrongUserMsg","setShowWrongUserMsg","showOkMsgSending","setShowOkMsgSending","handleSubmit","a","axios","post","headers","then","Response","clearForm","catch","error","useEffect","checkVaidation","className","Card","style","width","Body","Form","dir","direction","textAlign","Row","Group","as","Col","controlId","Label","Control","disabled","name","type","value","required","placeholder","onChange","e","target","rows","Alert","variant","onClose","dismissible","Button","onClick","ManageEmails","msgsList","dispatch","useDispatch","deletingMsgId","setDeletingMsgId","getMessages","response","val","data","messages","deleteMsg","msgId","Fragment","Array","isArray","length","undefined","map","msg","i","Title","ListGroup","ListGroupItem","sender","creation_date","defaultValue","message","id","renderedMsgs","Messages","Tabs","defaultActiveKey","Tab","eventKey","title","Container","alignContent","LoginPage","password","setPassword","localUserId","setUserId","loading","setLoadingState","handleChange","Newtoken","encodedToken","Heading","NaviBar","loginModalOpened","open","closeOnEsc","showCloseIcon","center","Navbar","bg","Brand","Toggle","aria-controls","Collapse","Nav","userConnection","Text","marginLeft","marginRight","Badge","size","userInfo","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","reducer","action","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5abb41fe.chunk.js","sourcesContent":["// export const baseUrl = \"http://localhost:5000/\";\r\nexport const baseUrl = \"http://home-assignment-jacob.herokuapp.com/api/\";\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../../utils/staticData';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n\r\n\r\nconst CreateEmail = () => {\r\n    const userId = useSelector(state => state.userId);\r\n    const token = useSelector(state => state.token);\r\n    const [reciverId, setReciverId] = useState('');\r\n    const [subject, setSubject] = useState('');\r\n    const [messageBody, setMessageBody] = useState('');\r\n    const [formValidated, setFormValidated] = useState();\r\n    const [sendingMsg, setSendingMsg] = useState();\r\n    const [showWrongUserMsg, setShowWrongUserMsg] = useState(false);\r\n    const [showOkMsgSending, setShowOkMsgSending] = useState(false);\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        setSendingMsg(true);\r\n        axios.post(\r\n            baseUrl + 'write_message',\r\n            {\r\n                reciverId,\r\n                subject,\r\n                messageBody\r\n            },\r\n            { headers: { 'Content-Type': 'application/json', 'Authorization': token } }\r\n        ).then(Response => { setSendingMsg(false); clearForm(); setShowOkMsgSending(true); }\r\n        ).catch(error => {\r\n            setSendingMsg(false);\r\n            setShowWrongUserMsg(true);\r\n        })\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        setFormValidated(checkVaidation());\r\n    }, [reciverId, subject, messageBody])\r\n\r\n    const clearForm = () => {\r\n        setReciverId(''); setSubject(''); setMessageBody('');\r\n    };\r\n\r\n    const checkVaidation = () => {\r\n        return reciverId && subject && messageBody;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"col d-flex justify-content-center\">\r\n            <Card style={{ width: '18rem' }}>\r\n                <Card.Body>\r\n                    <Form dir='rtl' style={{ direction: 'rtl', textAlign: 'right' }} >\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridSenderId\">\r\n                                <Form.Label>מזהה שולח:</Form.Label>\r\n                                <Form.Control disabled name='senderId' type=\"text\" value={userId} />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridReciverId\">\r\n                                <Form.Label>מזהה נמען:</Form.Label>\r\n                                <Form.Control required name='reciverId' value={reciverId} type=\"text\" placeholder=\"הקש את שם הנמען\" onChange={e => setReciverId(e.target.value)} />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridSubject\">\r\n                                <Form.Label>נושא:</Form.Label>\r\n                                <Form.Control required name='subject' value={subject} type=\"text\" placeholder=\"נושא\" onChange={e => setSubject(e.target.value)} />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridSenderId\">\r\n                                <Form.Label>תוכן ההודעה:\r\n                                    </Form.Label>\r\n                                <Form.Control required name='messageBody' value={messageBody} type=\"text\" placeholder=\"תוכן ההודעה כאן\" as=\"textarea\" rows={3} onChange={e => setMessageBody(e.target.value)} />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        {\r\n                            showWrongUserMsg\r\n                                ?\r\n                                (<Form.Row>\r\n                                    <Form.Group as={Col} controlId=\"formGridWrongMsg\">\r\n                                        <Alert variant=\"danger\" onClose={() => setShowWrongUserMsg(false)} dismissible>\r\n                                            <p>שם משתמש או סיסמה שגוי!</p>\r\n                                        </Alert>\r\n                                    </Form.Group>\r\n                                </Form.Row>)\r\n                                :\r\n                                ''\r\n                        }\r\n                        {\r\n                            showOkMsgSending\r\n                                ?\r\n                                (<Form.Row>\r\n                                    <Form.Group as={Col} controlId=\"formGridSuccessMsg\">\r\n                                        <Alert variant=\"success\" onClose={() => setShowOkMsgSending(false)} dismissible>\r\n                                            <p>נשלח בהצלחה!</p>\r\n                                        </Alert>\r\n                                    </Form.Group>\r\n                                </Form.Row>)\r\n                                :\r\n                                ''\r\n                        }\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridSenderId\">\r\n                                <Button disabled={!formValidated || sendingMsg} onClick={handleSubmit}>\r\n                                    {\r\n                                        sendingMsg\r\n                                            ?\r\n                                            \"שולח...\"\r\n                                            :\r\n                                            \"שלח הודעה\"\r\n                                    }\r\n                                </Button>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card >\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateEmail;","import React, { useState } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../../utils/staticData';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nconst ManageEmails = () => {\r\n    const token = useSelector(state => state.token);\r\n    const msgsList = useSelector(state => state.msgsList);\r\n    const dispatch = useDispatch();\r\n    const [deletingMsgId, setDeletingMsgId] = useState();\r\n\r\n\r\n    const getMessages = async () => {\r\n        axios.post(baseUrl + 'get_all_messages',\r\n            {},\r\n            { headers: { 'Content-Type': 'application/json', 'Authorization': token } }\r\n        ).then(response => { dispatch({ type: 'msgsList', val: response.data.messages }); setDeletingMsgId(null); }\r\n        );\r\n    };\r\n\r\n    const deleteMsg = async (msgId) => {\r\n        setDeletingMsgId(msgId);\r\n        axios.post(baseUrl + 'delete_message',\r\n            { msgId },\r\n            { headers: { 'Content-Type': 'application/json', 'Authorization': token } }\r\n        ).then(response => { getMessages(); }\r\n        ).catch(error => {\r\n            setDeletingMsgId(null);\r\n        });\r\n    }\r\n\r\n    const renderedMsgs = () => {\r\n        if (msgsList === undefined)\r\n            return;\r\n        const renderedCards = msgsList.map((msg, i) =>\r\n            <Col key={i} style={{ direction: 'rtl' }}>\r\n                <Card style={{ width: '18rem', textAlign: \"right\", direction: \"rtl\" }}>\r\n                    <Card.Body>\r\n                        <Card.Title>{msg.subject}</Card.Title>\r\n                    </Card.Body>\r\n                    <ListGroup className=\"list-group-flush\">\r\n                        <ListGroupItem><b>שולח: </b>{msg.sender}</ListGroupItem>\r\n                        <ListGroupItem><b>תאריך שליחה: </b>{msg.creation_date}</ListGroupItem>\r\n                        <ListGroupItem>\r\n                            <Form.Control required name='messageBody' defaultValue={msg.message} type=\"text\" placeholder=\"תוכן ההודעה כאן\" as=\"textarea\" rows={3} />\r\n                        </ListGroupItem>\r\n                    </ListGroup>\r\n                    <Card.Body>\r\n                        <Button disabled={deletingMsgId === msg.id} id={msg.id} onClick={() => deleteMsg(msg.id)} variant=\"warning\">\r\n                            {deletingMsgId === msg.id ? \"מוחק...\" : \"מחק הודעה\"}\r\n                        </Button>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        );\r\n        return renderedCards;\r\n    }\r\n\r\n\r\n    return (\r\n        < React.Fragment >\r\n            <Row>\r\n                <Col style={{ direction: 'rtl', textAlign: 'center' }}>\r\n                    {\r\n                        !Array.isArray(msgsList) || !msgsList.length\r\n                            ?\r\n                            <h3>אין הודעות להצגה</h3>\r\n                            :\r\n                            ''\r\n                    }\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                {renderedMsgs()}\r\n            </Row>\r\n        </React.Fragment >\r\n    );\r\n};\r\n\r\nexport default ManageEmails;","import React from 'react';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport CreateEmail from './CreateEmail';\r\nimport 'react-responsive-modal/styles.css';\r\nimport ManageEmails from './ManageEmails';\r\nimport { Container } from 'react-bootstrap';\r\n\r\n\r\nconst Messages = () => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <Tabs defaultActiveKey=\"create-email\" style={{ direction: 'rtl', textAlign: 'right' }} id=\"emails-tabs\">\r\n                        <Tab style={{ textAlign: 'center' }} eventKey=\"create-email\" title=\"שלח אימייל\">\r\n                            <CreateEmail />\r\n                        </Tab>\r\n                        <Tab eventKey=\"menage-emails\" title=\"ניהול אימיילים\">\r\n                            <Container style={{ alignContent: 'right' }}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <ManageEmails></ManageEmails>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n                        </Tab>\r\n                    </Tabs>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Messages;","import React, { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { baseUrl } from '../utils/staticData';\r\nimport axios from 'axios';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n\r\nconst LoginPage = () => {\r\n    const [password, setPassword] = useState();\r\n    const [localUserId, setUserId] = useState();\r\n    const [showWrongUserMsg, setShowWrongUserMsg] = useState(false);\r\n    const [loading, setLoadingState] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        if (name === 'password')\r\n            setPassword(value);\r\n        if (name === 'userId')\r\n            setUserId(value);\r\n    };\r\n\r\n\r\n    const getMessages = async (Newtoken) => {\r\n        axios.post(baseUrl + 'get_all_messages',\r\n            {},\r\n            { headers: { 'Content-Type': 'application/json', 'Authorization': Newtoken } }\r\n        ).then(response => { dispatch({ type: 'msgsList', val: response.data.messages }); }\r\n        );\r\n    };\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        setLoadingState(true)\r\n        axios.post(\r\n            baseUrl + 'sign_in',\r\n            {\r\n                \"password\": password,\r\n                \"userId\": localUserId\r\n            },\r\n            { headers: { 'Content-Type': 'application/json' } }\r\n        ).then(Response => {\r\n            dispatch({ type: 'token', val: Response.data.encodedToken });\r\n            dispatch({ type: 'userId', val: Response.data.userId });\r\n            dispatch({ type: 'loginModalOpened', val: false });\r\n            getMessages(Response.data.encodedToken);\r\n        }\r\n        ).catch(error => {\r\n            setLoadingState(false);\r\n            setShowWrongUserMsg(true);\r\n        })\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Form dir='rtl' style={{ direction: 'rtl', textAlign: 'right' }} >\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridHeader\">\r\n                        <h4>זיהוי משתמש</h4>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                {\r\n                    showWrongUserMsg\r\n                        ?\r\n                        (<Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridAlert\">\r\n                                <Alert variant=\"danger\" onClose={() => setShowWrongUserMsg(false)} dismissible>\r\n                                    <Alert.Heading>שם משתמש או סיסמה שגוי!</Alert.Heading>\r\n                                    <p>נא נסה שנית</p>\r\n                                </Alert>\r\n                            </Form.Group>\r\n                        </Form.Row>)\r\n                        :\r\n                        ''\r\n                }\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridSenderId\">\r\n                        <Form.Label>שם משתמש:</Form.Label>\r\n                        <Form.Control required name='userId' type=\"text\" placeholder=\"שם המשתמש שלך\" onChange={handleChange} />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                        <Form.Label>סיסמה:</Form.Label>\r\n                        <Form.Control required name='password' type=\"password\" placeholder=\"הקש סיסמה\" onChange={handleChange} />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                        <Button disabled={loading} onClick={handleSubmit}>{loading ? \"טוען...\" : \"הכנס\"}</Button>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Modal from 'react-responsive-modal';\r\nimport LoginPage from './LoginPage';\r\nimport { Button } from 'react-bootstrap';\r\nimport Badge from 'react-bootstrap/Badge';\r\n\r\n\r\n\r\n\r\nconst NaviBar = () => {\r\n    const userId = useSelector(state => state.userId);\r\n    const loginModalOpened = useSelector(state => state.loginModalOpened);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    const userInfo = () => {\r\n        let userConnection;\r\n        if (userId !== null && userId !== undefined)\r\n            userConnection =\r\n                <React.Fragment>\r\n                    <Navbar.Text style={{ marginLeft: \"10px\", marginRight: \"10px\" }}>\r\n                        <h5> משתמש: <Badge variant=\"secondary\">{userId}</Badge></h5>\r\n                    </Navbar.Text>\r\n                    <Button variant=\"info\" size=\"sm\" onClick={() => dispatch({ type: 'loginModalOpened', val: true })}>התחבר כמשתמש אחר</Button>\r\n                </React.Fragment>\r\n        else // user not connected\r\n            userConnection =\r\n                <React.Fragment>\r\n                    <Navbar.Text>משתמש: <b > אורח </b></Navbar.Text>\r\n                    <Button variant=\"info\" size=\"sm\" onClick={() => dispatch({ type: 'loginModalOpened', val: true })}>התחבר</Button>\r\n                </React.Fragment>\r\n        return (\r\n            <React.Fragment>\r\n                { userConnection}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <Modal open={loginModalOpened} onClose={() => { }} closeOnEsc={false} showCloseIcon={false} center>\r\n                        <LoginPage />\r\n                    </Modal>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Navbar bg=\"light\" variant=\"light\" style={{ textAlign: \"right\", direction: \"rtl\" }}>\r\n                        <Navbar.Brand >הודעות.נט</Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse className=\"justify-content-end\">\r\n                            <Nav className=\"mr-auto\">\r\n                                {userInfo()}\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment >\r\n    );\r\n};\r\n\r\nexport default NaviBar;","import './App.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Messages from './components/Msgs/Messages';\nimport NaviBar from './components/NavIBar';\n\n\nfunction App() {\n  return (\n    <Container>\n      <Row>\n        <Col> <NaviBar></NaviBar></Col>\n      </Row>\n      <Row>\n        <Col><Messages /></Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initState = { token: '', userId: '', loginModalOpened: true, msgsList: [] };\r\n\r\n\r\nconst reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'token':\r\n            state = { ...state, token: action.val }\r\n            break;\r\n        case 'userId':\r\n            state = { ...state, userId: action.val }\r\n            break;\r\n        case 'loginModalOpened':\r\n            state = { ...state, loginModalOpened: action.val }\r\n            break;\r\n        case 'msgsList':\r\n            state = { ...state, msgsList: action.val }\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reducer from './store/reducer';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nexport const store = createStore(reducer);\n\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store}> <App /> </Provider>\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}